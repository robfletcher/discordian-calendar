apply plugin: "artifactory-publish"
apply plugin: "maven-publish"
apply from: "$rootDir/gradle/credentials.gradle"

task sourceJar(type: Jar) {
  description "An archive of the source code"
  classifier "sources"
  from sourceSets.main.allJava, sourceSets.main.resources
}

task javadocJar(type: Jar) {
  description "An archive of the JavaDocs"
  classifier "javadoc"
  from javadoc
}

artifacts {
  archives sourceJar, javadocJar
}

artifactory {
  contextUrl = "http://oss.jfrog.org/"
  publish {
    repository {
      repoKey = isSnapshot ? "oss-snapshot-local" : "oss-release-local"
      username = bintrayUsername
      password = bintrayApiKey
    }
    defaults {
      publications("mavenCustom")
    }
  }
  resolve {
    repository {
      repoKey = "libs-release"
    }
  }
}

def pomConfig = {
  name project.name
  description project.pomDescription
  url "http://git.io/discordian-calendar"
  inceptionYear "2014"
  licenses {
    license([:]) {
      name "The Apache Software License, Version 2.0"
      url "http://www.apache.org/licenses/LICENSE-2.0.txt"
      distribution "repo"
    }
  }
  scm {
    url "https://github.com/$project.gitHubProject"
    connection "https://github.com/${project.gitHubProject}.git"
    developerConnection "scm:git@github.com:${project.gitHubProject}.git"
  }
  developers {
      developer {
        id "robfletcher"
        name "Rob Fletcher"
        url "http://freeside.co/"
        roles {
          role "Developer"
        }
    }
  }
}

publishing {
  publications {
    mavenCustom(MavenPublication) {
      from components.java
      artifact sourceJar
      artifact javadocJar

      pom.withXml {
        asNode().dependencies.dependency.each { dep ->
          if (dep.scope.text() in ["runtime", "test"]) {
            dep.remove(dep.scope)
          }
        }
        asNode().children().last() + pomConfig
      }
    }
  }
}